"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[544],{5598:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>o,toc:()=>h});var r=t(4848),d=t(8453);const s={},c=void 0,o={id:"api/ext/torch/encoder",title:"encoder",description:"superduperdb.ext.torch.encoder",source:"@site/content/api/ext/torch/encoder.md",sourceDirName:"api/ext/torch",slug:"/api/ext/torch/encoder",permalink:"/docs/api/ext/torch/encoder",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/api/ext/torch/encoder.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"model",permalink:"/docs/api/ext/sklearn/model"},next:{title:"model",permalink:"/docs/api/ext/torch/model"}},i={},h=[{value:"<code>tensor</code>",id:"tensor",level:2},{value:"<code>DecodeTensor</code>",id:"decodetensor",level:2},{value:"<code>EncodeTensor</code>",id:"encodetensor",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"superduperdb.ext.torch.encoder"})})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/SuperDuperDB/superduperdb/blob/main/superduperdb/ext/torch/encoder.py",children:"Source code"})}),"\n",(0,r.jsx)(n.h2,{id:"tensor",children:(0,r.jsx)(n.code,{children:"tensor"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"tensor(dtype,\n     shape: Sequence,\n     bytes_encoding: Optional[str] = None,\n     encodable: str = 'encodable',\n     db: Optional[ForwardRef('Datalayer')] = None)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"dtype"}),(0,r.jsx)(n.td,{children:"The dtype of the tensor."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"shape"}),(0,r.jsx)(n.td,{children:"The shape of the tensor."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bytes_encoding"}),(0,r.jsx)(n.td,{children:"The bytes encoding to use."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"encodable"}),(0,r.jsx)(n.td,{children:'The encodable name ["artifact", "encodable", "lazy_artifact", "file"].'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"db"}),(0,r.jsx)(n.td,{children:"The datalayer instance."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Create an encoder for a tensor of a given dtype and shape."}),"\n",(0,r.jsx)(n.h2,{id:"decodetensor",children:(0,r.jsx)(n.code,{children:"DecodeTensor"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"DecodeTensor(self,\n     dtype,\n     shape)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"dtype"}),(0,r.jsx)(n.td,{children:"The dtype of the tensor, eg. torch.float32"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"shape"}),(0,r.jsx)(n.td,{children:"The shape of the tensor, eg. (3, 4)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Decode a tensor from bytes."}),"\n",(0,r.jsx)(n.h2,{id:"encodetensor",children:(0,r.jsx)(n.code,{children:"EncodeTensor"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"EncodeTensor(self,\n     dtype)\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"dtype"}),(0,r.jsx)(n.td,{children:"The dtype of the tensor, eg. torch.float32"})]})})]}),"\n",(0,r.jsx)(n.p,{children:"Encode a tensor to bytes."})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(6540);const d={},s=r.createContext(d);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);