"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5622],{4380:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=s(4848),r=s(8453);const i={},a="Vector search",o={id:"tutorials/vector_search",title:"Vector search",description:"Since vector-search is all-the-rage right now,",source:"@site/content/tutorials/vector_search.md",sourceDirName:"tutorials",slug:"/tutorials/vector_search",permalink:"/docs/tutorials/vector_search",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/tutorials/vector_search.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/docs/tutorials/intro"},next:{title:"Listening for new data",permalink:"/docs/tutorials/listening"}},c={},d=[{value:"sidebar_position: 5",id:"sidebar_position-5",level:2},{value:"<code>Document</code>",id:"document",level:3},{value:"<code>DataType</code>",id:"datatype",level:3},{value:"<code>Schema</code>",id:"schema",level:3},{value:"====================================================================================================",id:"",level:2},{value:"sidebar_position: 7",id:"sidebar_position-7",level:2},{value:"Philosophy",id:"philosophy",level:2},{value:"Algorithm",id:"algorithm",level:2},{value:"Explanation",id:"explanation",level:2},{value:"MongoDB",id:"mongodb",level:2},{value:"SQL",id:"sql",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"vector-search",children:"Vector search"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["Since vector-search is all-the-rage right now,\nhere is the simplest possible iteration of semantic\ntext-search with a ",(0,t.jsx)(n.code,{children:"sentence_transformers"})," model,\nas an entrypoint to ",(0,t.jsx)(n.code,{children:"superduperdb"}),"."]}),(0,t.jsxs)(n.p,{children:["Note that ",(0,t.jsx)(n.code,{children:"superduperdb"})," is much-much more than vector-search\non text. Explore the docs to read about classical machine learning,\ncomputer vision, LLMs, fine-tuning and much much more!"]})]}),"\n",(0,t.jsxs)(n.p,{children:["First let's get some data. These data are the markdown files\nof the very same documentation you are reading!\nYou can download other sample data-sets for testing ",(0,t.jsx)(n.code,{children:"superduperdb"}),"\nby following ",(0,t.jsx)(n.a,{href:"../reusable_snippets/get_useful_sample_data",children:"these lines of code"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import json\nimport requests \nr = requests.get('https://superduperdb-public-demo.s3.amazonaws.com/text.json')\n\nwith open('text.json', 'wb') as f:\n    f.write(r.content)\n\nwith open('text.json', 'r') as f:\n    data = json.load(f)        \n\nprint(data[0])\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsxs)("pre",{children:[(0,t.jsx)(n.hr,{}),(0,t.jsx)(n.h2,{id:"sidebar_position-5",children:"sidebar_position: 5"}),(0,t.jsx)(n.h1,{id:"encoding-data",children:"Encoding data"}),(0,t.jsx)(n.p,{children:"In AI, typical types of data are:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Numbers"})," (integers, floats, etc.)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Text"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Images"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Audio"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Videos"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"...bespoke in house data"})}),"\n"]}),(0,t.jsxs)(n.p,{children:["Most databases don't support any data other than numbers and text.\nSuperDuperDB enables the use of these more interesting data-types using the ",(0,t.jsx)(n.code,{children:"Document"})," wrapper."]}),(0,t.jsx)(n.h3,{id:"document",children:(0,t.jsx)(n.code,{children:"Document"})}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Document"})," wrapper, wraps dictionaries, and is the container which is used whenever\ndata is exchanged with your database. That means inputs, and queries, wrap dictionaries\nused with ",(0,t.jsx)(n.code,{children:"Document"})," and also results are returned wrapped with ",(0,t.jsx)(n.code,{children:"Document"}),"."]}),(0,t.jsxs)(n.p,{children:["Whenever the ",(0,t.jsx)(n.code,{children:"Document"})," contains data which is in need of specialized serialization,\nthen the ",(0,t.jsx)(n.code,{children:"Document"})," instance contains calls to ",(0,t.jsx)(n.code,{children:"DataType"})," instances."]}),(0,t.jsx)(n.h3,{id:"datatype",children:(0,t.jsx)(n.code,{children:"DataType"})}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsxs)(n.a,{href:"../apply_api/datatype",children:[(0,t.jsx)(n.code,{children:"DataType"})," class"]}),", allows users to create and encoder custom datatypes, by providing\ntheir own encoder/decoder pairs."]}),(0,t.jsxs)(n.p,{children:["Here is an example of applying an ",(0,t.jsx)(n.code,{children:"DataType"})," to add an image to a ",(0,t.jsx)(n.code,{children:"Document"}),":"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pickle\nimport PIL.Image\nfrom superduperdb import DataType, Document\n\nimage = PIL.Image.open('my_image.jpg')\n\nmy_image_encoder = DataType(\n    identifier='my-pil',\n    encoder=lambda x: pickle.dumps(x),\n    decoder=lambda x: pickle.loads(x),\n)\n\ndocument = Document(\\{'img': my_image_encoder(image)\\})\n"})}),(0,t.jsxs)(n.p,{children:["The bare-bones dictionary may be exposed with ",(0,t.jsx)(n.code,{children:".unpack()"}),":"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\\>\\>\\> document.unpack()\n\\{'img': \\<PIL.PngImagePlugin.PngImageFile image mode=P size=400x300\\>\\}\n"})}),(0,t.jsxs)(n.p,{children:["By default, data encoded with ",(0,t.jsx)(n.code,{children:"DataType"})," is saved in the database, but developers\nmay alternatively save data in the ",(0,t.jsx)(n.code,{children:"db.artifact_store"})," instead."]}),(0,t.jsxs)(n.p,{children:["This may be achiever by specifying the ",(0,t.jsx)(n.code,{children:"encodable=..."})," parameter:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"my_image_encoder = DataType(\n    identifier='my-pil',\n    encoder=lambda x: pickle.dumps(x),\n    decoder=lambda x: pickle.loads(x),\n    encodable='artifact',    # saves to disk/ db.artifact_store\n    # encodable='lazy_artifact', # Just in time loading\n)\n"})}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"encodable"})," specifies the type of the output of the ",(0,t.jsx)(n.code,{children:"__call__"})," method,\nwhich will be a subclass of ",(0,t.jsx)(n.code,{children:"superduperdb.components.datatype._BaseEncodable"}),".\nThese encodables become leaves in the tree defines by a ",(0,t.jsx)(n.code,{children:"Document"}),"."]}),(0,t.jsx)(n.h3,{id:"schema",children:(0,t.jsx)(n.code,{children:"Schema"})}),(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Schema"})," allows developers to connect named fields of dictionaries\nor columns of ",(0,t.jsx)(n.code,{children:"pandas.DataFrame"})," objects with ",(0,t.jsx)(n.code,{children:"DataType"})," instances."]}),(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Schema"})," is used, in particular, for SQL databases/ tables, and for\nmodels that return multiple outputs."]}),(0,t.jsxs)(n.p,{children:["Here is an example ",(0,t.jsx)(n.code,{children:"Schema"}),", which is used together with text and image\nfields:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"s = Schema('my-schema', fields=\\{'my-text': 'str', 'my-image': my_image_encoder\\})\n"})})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Now we connect to SuperDuperDB, using MongoMock as a databackend.\nRead more about connecting to SuperDuperDB ",(0,t.jsx)(n.a,{href:"../core_api/connect",children:"here"})," and\na semi-exhaustive list of supported data-backends for connecting ",(0,t.jsx)(n.a,{href:"../reusable_snippets/connect_to_superduperdb",children:"here"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from superduperdb import superduper, Document\n\ndb = superduper('mongomock://test')\n\n_ = db['documents'].insert_many([Document({'txt': txt}) for txt in data]).execute()\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"2024-May-23 22:32:53.64| INFO     | Duncans-MBP.fritz.box| superduperdb.base.build:69   | Data Client is ready. mongomock.MongoClient('localhost', 27017)\n2024-May-23 22:32:53.66| INFO     | Duncans-MBP.fritz.box| superduperdb.base.build:42   | Connecting to Metadata Client with engine:  mongomock.MongoClient('localhost', 27017)\n2024-May-23 22:32:53.66| INFO     | Duncans-MBP.fritz.box| superduperdb.base.build:155  | Connecting to compute client: None\n2024-May-23 22:32:53.66| INFO     | Duncans-MBP.fritz.box| superduperdb.base.datalayer:85   | Building Data Layer\n2024-May-23 22:32:53.66| INFO     | Duncans-MBP.fritz.box| superduperdb.base.build:220  | Configuration:\n+---------------+------------------+\n| Configuration |      Value       |\n+---------------+------------------+\n|  Data Backend | mongomock://test |\n+---------------+------------------+\n2024-May-23 22:32:53.67| INFO     | Duncans-MBP.fritz.box| superduperdb.backends.local.compute:37   | Submitting job. function:<function callable_job at 0x1107caa20>\n2024-May-23 22:32:53.68| SUCCESS  | Duncans-MBP.fritz.box| superduperdb.backends.local.compute:43   | Job submitted on <superduperdb.backends.local.compute.LocalComputeBackend object at 0x15267d010>.  function:<function callable_job at 0x1107caa20> future:03704b18-e98c-4eb8-ab48-d257105c3e6f"})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"db.show()\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"[]"})})]}),"\n",(0,t.jsxs)(n.p,{children:["We are going to make these data searchable by activating a ",(0,t.jsx)(n.a,{href:"../apply_api/model",children:(0,t.jsx)(n.code,{children:"Model"})})," instance\nto compute vectors for each item inserted to the ",(0,t.jsx)(n.code,{children:'"documents"'})," collection.\nFor that we'll use the ",(0,t.jsx)(n.a,{href:"https://sbert.net/",children:"sentence-transformers"})," integration to ",(0,t.jsx)(n.code,{children:"superduperdb"}),".\nRead more about the ",(0,t.jsx)(n.code,{children:"sentence_transformers"})," integration ",(0,t.jsx)(n.a,{href:"../ai_integrations/sentence_transformers",children:"here"}),"\nand ",(0,t.jsx)(n.a,{href:"../../api/ext/sentence_transformers/",children:"here"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python"})}),"\n",(0,t.jsx)(i,{children:(0,t.jsx)("summary",{children:"Outputs"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from superduperdb.ext.sentence_transformers import SentenceTransformer\n\nmodel = SentenceTransformer(\n    identifier="test",\n    predict_kwargs={"show_progress_bar": True},\n    model="all-MiniLM-L6-v2",\n    device="cpu",\n    postprocess=lambda x: x.tolist(),\n)\n'})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["/Users/dodo/.pyenv/versions/3.11.7/envs/superduperdb-3.11/lib/python3.11/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: ",(0,t.jsx)(n.code,{children:"resume_download"})," is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use ",(0,t.jsx)(n.code,{children:"force_download=True"}),".\nwarnings.warn("]})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"2024-May-23 22:33:00.27| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:386  | Initializing SentenceTransformer : test\n2024-May-23 22:33:00.27| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:389  | Initialized  SentenceTransformer : test successfully"})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"Batches:   0%|          | 0/1 [00:00<?, ?it/s]"})})]}),"\n",(0,t.jsxs)(n.p,{children:["We can check that this model gives us what we want by evaluating an output\non a single data-point. (Learn more about the various aspects of ",(0,t.jsx)(n.code,{children:"Model"})," ",(0,t.jsx)(n.a,{href:"../models/",children:"here"}),".)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"model.predict(data[0])\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"Batches:   0%|          | 0/1 [00:00<?, ?it/s]"})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"[-0.0728381797671318,\n-0.04369897395372391,\n-0.053990256041288376,\n0.05244452506303787,\n-0.023977573961019516,\n0.01649916172027588,\n-0.011447322554886341,\n0.061035461723804474,\n-0.07156683504581451,\n-0.021972885355353355,\n0.01267794519662857,\n0.018208766356110573,\n0.05270218849182129,\n-0.020327100530266762,\n-0.019956670701503754,\n0.027658769860863686,\n0.05226463824510574,\n-0.09045840799808502,\n-0.05595366284251213,\n-0.015193621627986431,\n0.11809872835874557,\n0.006927163805812597,\n-0.042815908789634705,\n0.020163120701909065,\n-0.007551214192062616,\n0.05370991304516792,\n-0.06269364058971405,\n-0.015371082350611687,\n0.07905995100736618,\n0.01635877788066864,\n0.013246661052107811,\n0.05565343424677849,\n0.01678791269659996,\n0.08823869377374649,\n-0.06329561769962311,\n0.018252376466989517,\n0.01689964346587658,\n-0.09000741690397263,\n-0.013926311396062374,\n-0.054565709084272385,\n0.09763795882463455,\n-0.045446526259183884,\n-0.11169185489416122,\n-0.01672297902405262,\n0.028883105143904686,\n0.02041822485625744,\n-0.07608168572187424,\n-0.03668771684169769,\n-0.03977571055293083,\n0.03618845343589783,\n-0.0918053463101387,\n0.029532095417380333,\n-0.04220665618777275,\n0.13082784414291382,\n0.024324564263224602,\n0.025249535217881203,\n-0.016180122271180153,\n0.010552441701292992,\n0.0027522461023181677,\n0.07488349825143814,\n0.010217947885394096,\n-0.005154070910066366,\n0.04516936093568802,\n-0.020390896126627922,\n0.039545465260744095,\n-0.031169062480330467,\n-0.04323659837245941,\n0.020132744684815407,\n0.0670941099524498,\n-0.08838536590337753,\n-0.005763655062764883,\n0.014565517194569111,\n-0.03434328734874725,\n0.08641394972801208,\n0.03842026740312576,\n-0.06397535651922226,\n-0.004498982336372137,\n-0.03862036392092705,\n0.009389184415340424,\n-0.06150598078966141,\n-0.018634818494319916,\n-0.04963228479027748,\n0.046070147305727005,\n0.07461931556463242,\n0.016484497115015984,\n-0.041531577706336975,\n0.07544152438640594,\n0.009718718007206917,\n-0.029345177114009857,\n0.009860241785645485,\n-0.01978706754744053,\n-0.1266753077507019,\n-0.006543521303683519,\n0.004957514349371195,\n-0.022630779072642326,\n0.062321994453668594,\n-0.008847227320075035,\n-0.009422101080417633,\n0.07500597834587097,\n-0.011071165092289448,\n-0.011291230097413063,\n-0.0023497703950852156,\n-0.0020577553659677505,\n-0.022909553721547127,\n-0.02039080671966076,\n-0.08629532903432846,\n0.035559117794036865,\n0.004795302636921406,\n-0.025927048176527023,\n-0.000661480997223407,\n-0.01712101511657238,\n-0.019804038107395172,\n-0.09941169619560242,\n-0.12973709404468536,\n-0.036208849400281906,\n0.01095140166580677,\n-0.10579997301101685,\n0.018861284479498863,\n-0.06653669476509094,\n-0.009016807191073895,\n0.01645195111632347,\n0.05936351791024208,\n0.024916797876358032,\n0.06697884202003479,\n0.06224494054913521,\n0.029584383592009544,\n-0.07033423334360123,\n2.664977201744624e-33,\n0.021844016388058662,\n-0.08870648592710495,\n-0.0011538445251062512,\n0.023276792839169502,\n-0.018942521885037422,\n0.008065970614552498,\n-0.03592826798558235,\n0.08716072887182236,\n0.02071245387196541,\n0.06679968535900116,\n-0.02447657659649849,\n0.0386064276099205,\n-0.058644849807024,\n0.05417194217443466,\n0.04741952195763588,\n0.03192991763353348,\n-0.07583042234182358,\n-0.016834404319524765,\n0.005513317883014679,\n0.03408630192279816,\n0.09274633228778839,\n0.03650207445025444,\n-0.009820879437029362,\n0.03678520396351814,\n0.04744667559862137,\n0.03139625862240791,\n-0.02660897560417652,\n-0.054728686809539795,\n-0.0004101162194274366,\n0.012437778525054455,\n-0.057767197489738464,\n-0.12133049219846725,\n0.004859662614762783,\n-0.005881409160792828,\n0.03496640920639038,\n0.0011129904305562377,\n-0.032958950847387314,\n-0.01912698708474636,\n-0.09516117721796036,\n0.01166975311934948,\n0.02697627805173397,\n0.04149679094552994,\n-0.038904909044504166,\n-0.07173115015029907,\n-0.03998439013957977,\n0.03461567685008049,\n0.056760404258966446,\n0.038543105125427246,\n-0.005076229106634855,\n-0.048972200602293015,\n-0.032644398510456085,\n0.04734884947538376,\n-0.028061121702194214,\n-0.015486026182770729,\n0.04073994979262352,\n-0.010933760553598404,\n0.07432980090379715,\n0.045219823718070984,\n0.061553847044706345,\n-0.04286878556013107,\n-0.04373219981789589,\n-0.030894780531525612,\n0.037015534937381744,\n-0.012399295344948769,\n-0.040280185639858246,\n0.018744098022580147,\n0.04238991066813469,\n0.0028010543901473284,\n0.11493761837482452,\n-0.01020615641027689,\n-0.05960821732878685,\n0.10087733715772629,\n-0.0005544194718822837,\n0.003897483227774501,\n-0.017415126785635948,\n0.021939443424344063,\n-0.023334739729762077,\n-0.1286034733057022,\n-0.05948842316865921,\n0.01876923255622387,\n-0.010775558650493622,\n-0.005998989101499319,\n-0.017639417201280594,\n0.02809220552444458,\n-0.05434253439307213,\n0.013654942624270916,\n-0.007518705911934376,\n-0.10503417998552322,\n-0.005824903957545757,\n-0.10465069860219955,\n0.053811464458703995,\n0.012696388177573681,\n-0.03567223250865936,\n-0.12682373821735382,\n-0.04431791231036186,\n-5.649626418775523e-33,\n-0.010820495896041393,\n-0.00802531372755766,\n-0.05365433543920517,\n0.03958006575703621,\n-0.02104414999485016,\n0.006130194291472435,\n0.04468188062310219,\n0.05036340653896332,\n-0.018140576779842377,\n-0.04300504922866821,\n0.012102029286324978,\n-0.00577476667240262,\n0.03385505825281143,\n-0.06575366109609604,\n-0.00653001619502902,\n0.016766566783189774,\n-0.12117733806371689,\n-0.09218579530715942,\n0.007316686678677797,\n-0.019426673650741577,\n-0.05662667751312256,\n0.0824657529592514,\n0.029016738757491112,\n0.047513313591480255,\n0.05799231678247452,\n-0.008996383287012577,\n-0.04977172240614891,\n0.03319057077169418,\n0.11511028558015823,\n0.02250896953046322,\n0.02120146155357361,\n-0.049932535737752914,\n-0.041500966995954514,\n-0.009317374788224697,\n-0.09659228473901749,\n-0.05510890483856201,\n0.06295066326856613,\n0.024173501878976822,\n-0.04577157646417618,\n0.024133509024977684,\n0.04559364914894104,\n0.021016940474510193,\n-0.049103744328022,\n0.024935618042945862,\n-0.05304615944623947,\n-0.014961606822907925,\n-0.09521036595106125,\n0.029579075053334236,\n0.025183551013469696,\n-0.08900482952594757,\n0.07622205466032028,\n-0.036385778337717056,\n-0.05705392360687256,\n-0.03871440514922142,\n0.011190380901098251,\n-0.046501439064741135,\n-0.025219706818461418,\n0.0001118649379350245,\n-0.04297145828604698,\n0.06217939034104347,\n0.04021172970533371,\n-0.07403939962387085,\n-0.0007105112308636308,\n0.0006416494725272059,\n-0.07840533554553986,\n-0.026061616837978363,\n-0.021549392491579056,\n-0.06263766437768936,\n-0.11086386442184448,\n-0.05587910860776901,\n0.07480043172836304,\n-0.07763925194740295,\n0.04992743954062462,\n0.06204086169600487,\n-0.0013184875715523958,\n-0.004204373806715012,\n-0.05604926869273186,\n-0.0030061916913837194,\n0.02281804382801056,\n0.0618956983089447,\n-0.046122197061777115,\n0.0020551434718072414,\n0.050125688314437866,\n0.08694882690906525,\n0.06670200824737549,\n0.018796533346176147,\n-0.010559462942183018,\n0.06277848035097122,\n-0.04749680310487747,\n-0.0014071549521759152,\n-0.08777493238449097,\n0.09142813831567764,\n-0.09544055908918381,\n0.09548325836658478,\n-0.01017127837985754,\n-5.976371397764524e-08,\n-0.07207749783992767,\n-0.018692996352910995,\n0.02441777102649212,\n0.047647666186094284,\n0.007122713141143322,\n-0.055901724845170975,\n-0.022228682413697243,\n0.08026605099439621,\n0.05604938790202141,\n-0.03505357354879379,\n0.06595908850431442,\n-0.02741447649896145,\n-0.1040404811501503,\n-0.013773254118859768,\n0.11995217949151993,\n0.00027782461256720126,\n0.07589304447174072,\n-0.009353208355605602,\n-0.013621047139167786,\n-0.03814826160669327,\n-0.03208579123020172,\n-0.04983912780880928,\n-0.0672062411904335,\n-0.08362551778554916,\n0.00817915890365839,\n0.011041522957384586,\n0.013109216466546059,\n0.13754235208034515,\n0.006957167759537697,\n-0.0294102281332016,\n0.011861572042107582,\n0.016042795032262802,\n0.10429029911756516,\n-0.0032936607021838427,\n0.02154575102031231,\n0.06281223148107529,\n0.03468304127454758,\n0.05810246244072914,\n-0.031500834971666336,\n0.014499562792479992,\n0.05990524962544441,\n-0.01979857124388218,\n-0.09960303455591202,\n0.0047220210544764996,\n0.07983221858739853,\n0.009491761215031147,\n0.06561334431171417,\n-0.007396489381790161,\n0.062069281935691833,\n0.05087302252650261,\n-0.0004922127700410783,\n-0.05793500691652298,\n0.03456997871398926,\n0.08377060294151306,\n0.03708452731370926,\n0.03597697988152504,\n-0.01678624376654625,\n-0.018676387146115303,\n0.06553706526756287,\n0.022750001400709152,\n0.015125676058232784,\n0.032285671681165695,\n0.03319930657744408,\n0.016521509736776352]"})})]}),"\n",(0,t.jsxs)(n.p,{children:['Now that we\'ve verified that this model works, we can "activate" it for\nvector-search by creating a ',(0,t.jsx)(n.a,{href:"../apply_api/vector_index",children:(0,t.jsx)(n.code,{children:"VectorIndex"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pprint\n\nvector_index = model.to_vector_index(select=db['documents'].find(), key='txt')\n\npprint.pprint(vector_index)\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["VectorIndex(identifier='test",":vector_index","',\nuuid='acd20227-14e2-4cee-9507-f738315f5d42',\nindexing_listener=Listener(identifier='component/listener/test/b335fc9c-ad9e-4495-8c39-6894c5b4f842',\nuuid='b335fc9c-ad9e-4495-8c39-6894c5b4f842',\nkey='txt',\nmodel=SentenceTransformer(preferred_devices=('cuda',\n'mps',\n'cpu'),\ndevice='cpu',\nidentifier='test',\nuuid='11063ea2-4afa-4cab-8a55-21d0c7ad2900',\nsignature='singleton',\ndatatype=DataType(identifier='test/datatype',\nuuid='e46268dc-5c88-48dd-8595-f774c35a8f09',\nencoder=None,\ndecoder=None,\ninfo=None,\nshape=(384,),\ndirectory=None,\nencodable='native',\nbytes_encoding=<BytesEncoding.BYTES: 'Bytes'>,\nintermediate_type='bytes',\nmedia_type=None),\noutput_schema=None,\nflatten=False,\nmodel_update_kwargs={},\npredict_kwargs={'show_progress_bar': True},\ncompute_kwargs={},\nvalidation=None,\nmetric_values={},\nobject=SentenceTransformer(\n(0): Transformer({'max_seq_length': 256, 'do_lower_case': False}) with Transformer model: BertModel\n(1): Pooling({'word_embedding_dimension': 384, 'pooling_mode_cls_token': False, 'pooling_mode_mean_tokens': True, 'pooling_mode_max_tokens': False, 'pooling_mode_mean_sqrt_len_tokens': False, 'pooling_mode_weightedmean_tokens': False, 'pooling_mode_lasttoken': False, 'include_prompt': True})\n(2): Normalize()\n),\nmodel='all-MiniLM-L6-v2',\npreprocess=None,\npostprocess=<function <lambda> at 0x152658cc0>),\nselect=documents.find(),\nactive=True,\npredict_kwargs={}),\ncompatible_listener=None,\nmeasure=<VectorIndexMeasureType.cosine: 'cosine'>,\nmetric_values={})"]})})]}),"\n",(0,t.jsxs)(n.p,{children:["You will see that the ",(0,t.jsx)(n.code,{children:"VectorIndex"})," contains a ",(0,t.jsx)(n.a,{href:"../apply_api/listener",children:(0,t.jsx)(n.code,{children:"Listener"})})," instance.\nThis instance wraps the model, and configures it to compute outputs\non data inserted to the ",(0,t.jsx)(n.code,{children:'"documents"'})," collection with the key ",(0,t.jsx)(n.code,{children:'"txt"'}),"."]}),"\n",(0,t.jsx)(n.p,{children:"To activate this index, we now do:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"db.apply(vector_index)\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"2024-May-23 22:33:06.79| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:386  | Initializing DataType : dill_lazy\n2024-May-23 22:33:06.79| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:389  | Initialized  DataType : dill_lazy successfully\n2024-May-23 22:33:08.38| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:386  | Initializing DataType : dill\n2024-May-23 22:33:08.38| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:389  | Initialized  DataType : dill successfully\n2024-May-23 22:33:08.42| INFO     | Duncans-MBP.fritz.box| superduperdb.backends.local.compute:37   | Submitting job. function:<function method_job at 0x1107caac0>"})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"204it [00:00, 142844.41it/s]"})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"2024-May-23 22:33:08.55| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:386  | Initializing SentenceTransformer : test\n2024-May-23 22:33:08.55| INFO     | Duncans-MBP.fritz.box| superduperdb.components.component:389  | Initialized  SentenceTransformer : test successfully"})}),(0,t.jsx)("pre",{}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"Batches:   0%|          | 0/7 [00:00<?, ?it/s]"})}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["2024-May-23 22:33:12.78| INFO     | Duncans-MBP.fritz.box| superduperdb.components.model:783  | Adding 204 model outputs to ",(0,t.jsx)(n.code,{children:"db"}),"\n2024-May-23 22:33:12.89| WARNING  | Duncans-MBP.fritz.box| superduperdb.backends.mongodb.query:254  | Some delete ids are not executed , hence halting execution Please note the partially executed operations wont trigger any ",(0,t.jsx)(n.code,{children:"model/listeners"})," unless CDC is active.\n2024-May-23 22:33:12.89| SUCCESS  | Duncans-MBP.fritz.box| superduperdb.backends.local.compute:43   | Job submitted on <superduperdb.backends.local.compute.LocalComputeBackend object at 0x15267d010>.  function:<function method_job at 0x1107caac0> future:3598065c-0bfb-4d94-9b25-6e7e82c09bd0\n2024-May-23 22:33:12.90| INFO     | Duncans-MBP.fritz.box| superduperdb.backends.local.compute:37   | Submitting job. function:<function callable_job at 0x1107caa20>\n2024-May-23 22:33:12.98| INFO     | Duncans-MBP.fritz.box| superduperdb.base.datalayer:170  | Loading vectors of vector-index: 'test",":vector_index","'\n2024-May-23 22:33:12.98| INFO     | Duncans-MBP.fritz.box| superduperdb.base.datalayer:180  | documents.find(documents[0], documents[1])"]})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"Loading vectors into vector-table...: 204it [00:00, 3148.10it/s]"})}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["2024-May-23 22:33:13.05| SUCCESS  | Duncans-MBP.fritz.box| superduperdb.backends.local.compute:43   | Job submitted on <superduperdb.backends.local.compute.LocalComputeBackend object at 0x15267d010>.  function:<function callable_job at 0x1107caa20> future",":c355caeb-daab-4712-a269-6bfca8da2c09"]})}),(0,t.jsx)("pre",{}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["([<superduperdb.jobs.job.ComponentJob at 0x28d6f95d0>,\n<superduperdb.jobs.job.FunctionJob at 0x28d757850>],\nVectorIndex(identifier='test",":vector_index","', uuid='acd20227-14e2-4cee-9507-f738315f5d42', indexing_listener=Listener(identifier='component/listener/test/b335fc9c-ad9e-4495-8c39-6894c5b4f842', uuid='b335fc9c-ad9e-4495-8c39-6894c5b4f842', key='txt', model=SentenceTransformer(preferred_devices=('cuda', 'mps', 'cpu'), device='cpu', identifier='test', uuid='11063ea2-4afa-4cab-8a55-21d0c7ad2900', signature='singleton', datatype=DataType(identifier='test/datatype', uuid='e46268dc-5c88-48dd-8595-f774c35a8f09', encoder=None, decoder=None, info=None, shape=(384,), directory=None, encodable='native', bytes_encoding=<BytesEncoding.BYTES: 'Bytes'>, intermediate_type='bytes', media_type=None), output_schema=None, flatten=False, model_update_kwargs={}, predict_kwargs={'show_progress_bar': True}, compute_kwargs={}, validation=None, metric_values={}, object=SentenceTransformer(\n(0): Transformer({'max_seq_length': 256, 'do_lower_case': False}) with Transformer model: BertModel\n(1): Pooling({'word_embedding_dimension': 384, 'pooling_mode_cls_token': False, 'pooling_mode_mean_tokens': True, 'pooling_mode_max_tokens': False, 'pooling_mode_mean_sqrt_len_tokens': False, 'pooling_mode_weightedmean_tokens': False, 'pooling_mode_lasttoken': False, 'include_prompt': True})\n(2): Normalize()\n), model='all-MiniLM-L6-v2', preprocess=None, postprocess=<function <lambda> at 0x152658cc0>), select=documents.find(), active=True, predict_kwargs={}), compatible_listener=None, measure=<VectorIndexMeasureType.cosine: 'cosine'>, metric_values={}))"]})})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"db.apply"})," command is a universal command for activating AI components in SuperDuperDB."]}),"\n",(0,t.jsxs)(n.p,{children:["You will now see lots of output - the model-outputs/ vectors are computed\nand the various parts of the ",(0,t.jsx)(n.code,{children:"VectorIndex"})," are registered in the system."]}),"\n",(0,t.jsx)(n.p,{children:"You can verify this with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"db.show()\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["[{'identifier': 'test', 'type_id': 'model'},\n{'identifier': 'component/listener/test/b335fc9c-ad9e-4495-8c39-6894c5b4f842',\n'type_id': 'listener'},\n{'identifier': 'test",":vector_index","', 'type_id': 'vector_index'}]"]})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"db['documents'].find_one().execute().unpack()\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsxs)(n.p,{children:["{'txt': \"---\\nsidebar_position: 5\\n---\\n\\n# Encoding data\\n\\nIn AI, typical types of data are:\\n\\n- ",(0,t.jsx)(n.strong,{children:"Numbers"})," (integers, floats, etc.)\\n- ",(0,t.jsx)(n.strong,{children:"Text"}),"\\n- ",(0,t.jsx)(n.strong,{children:"Images"}),"\\n- ",(0,t.jsx)(n.strong,{children:"Audio"}),"\\n- ",(0,t.jsx)(n.strong,{children:"Videos"}),"\\n- ",(0,t.jsx)(n.strong,{children:"...bespoke in house data"}),"\\n\\nMost databases don't support any data other than numbers and text.\\nSuperDuperDB enables the use of these more interesting data-types using the ",(0,t.jsx)(n.code,{children:"Document"})," wrapper.\\n\\n### ",(0,t.jsx)(n.code,{children:"Document"}),"\\n\\nThe ",(0,t.jsx)(n.code,{children:"Document"})," wrapper, wraps dictionaries, and is the container which is used whenever \\ndata is exchanged with your database. That means inputs, and queries, wrap dictionaries \\nused with ",(0,t.jsx)(n.code,{children:"Document"})," and also results are returned wrapped with ",(0,t.jsx)(n.code,{children:"Document"}),".\\n\\nWhenever the ",(0,t.jsx)(n.code,{children:"Document"})," contains data which is in need of specialized serialization,\\nthen the ",(0,t.jsx)(n.code,{children:"Document"})," instance contains calls to ",(0,t.jsx)(n.code,{children:"DataType"})," instances.\\n\\n### ",(0,t.jsx)(n.code,{children:"DataType"}),"\\n\\nThe ",(0,t.jsxs)(n.a,{href:"../apply_api/datatype",children:[(0,t.jsx)(n.code,{children:"DataType"})," class"]}),", allows users to create and encoder custom datatypes, by providing \\ntheir own encoder/decoder pairs.\\n\\nHere is an example of applying an ",(0,t.jsx)(n.code,{children:"DataType"})," to add an image to a ",(0,t.jsx)(n.code,{children:"Document"}),":\\n\\n",(0,t.jsx)(n.code,{children:"python\\nimport pickle\\nimport PIL.Image\\nfrom superduperdb import DataType, Document\\n\\nimage = PIL.Image.open('my_image.jpg')\\n\\nmy_image_encoder = DataType(\\n    identifier='my-pil',\\n    encoder=lambda x: pickle.dumps(x),\\n    decoder=lambda x: pickle.loads(x),\\n)\\n\\ndocument = Document(\\{'img': my_image_encoder(image)\\})\\n"}),"\\n\\nThe bare-bones dictionary may be exposed with ",(0,t.jsx)(n.code,{children:".unpack()"}),":\\n\\n",(0,t.jsx)(n.code,{children:"python\\n\\>\\>\\> document.unpack()\\n\\{'img': \\<PIL.PngImagePlugin.PngImageFile image mode=P size=400x300\\>\\}\\n"}),"\\n\\nBy default, data encoded with ",(0,t.jsx)(n.code,{children:"DataType"})," is saved in the database, but developers \\nmay alternatively save data in the ",(0,t.jsx)(n.code,{children:"db.artifact_store"})," instead. \\n\\nThis may be achiever by specifying the ",(0,t.jsx)(n.code,{children:"encodable=..."})," parameter:\\n\\n",(0,t.jsx)(n.code,{children:"python\\nmy_image_encoder = DataType(\\n    identifier='my-pil',\\n    encoder=lambda x: pickle.dumps(x),\\n    decoder=lambda x: pickle.loads(x),\\n    encodable='artifact',    # saves to disk/ db.artifact_store\\n    # encodable='lazy_artifact', # Just in time loading\\n)\\n"}),"\\n\\nThe ",(0,t.jsx)(n.code,{children:"encodable"})," specifies the type of the output of the ",(0,t.jsx)(n.code,{children:"__call__"})," method, \\nwhich will be a subclass of ",(0,t.jsx)(n.code,{children:"superduperdb.components.datatype._BaseEncodable"}),".\\nThese encodables become leaves in the tree defines by a ",(0,t.jsx)(n.code,{children:"Document"}),".\\n\\n### ",(0,t.jsx)(n.code,{children:"Schema"}),"\\n\\nA ",(0,t.jsx)(n.code,{children:"Schema"})," allows developers to connect named fields of dictionaries \\nor columns of ",(0,t.jsx)(n.code,{children:"pandas.DataFrame"})," objects with ",(0,t.jsx)(n.code,{children:"DataType"})," instances.\\n\\nA ",(0,t.jsx)(n.code,{children:"Schema"})," is used, in particular, for SQL databases/ tables, and for \\nmodels that return multiple outputs.\\n\\nHere is an example ",(0,t.jsx)(n.code,{children:"Schema"}),", which is used together with text and image \\nfields:\\n\\n",(0,t.jsx)(n.code,{children:"python\\ns = Schema('my-schema', fields=\\{'my-text': 'str', 'my-image': my_image_encoder\\})\\n"}),"\\n\",\n'_fold': 'train',\n'_id': ObjectId('664fa7f5df381fe5ebf38405'),\n'_outputs': {'b335fc9c-ad9e-4495-8c39-6894c5b4f842': [-0.0728381797671318,\n-0.04369895160198212,\n-0.053990304470062256,\n0.05244451016187668,\n-0.023977596312761307,\n0.016499122604727745,\n-0.011447325348854065,\n0.061035484075546265,\n-0.07156682759523392,\n-0.021972879767417908,\n0.012677934020757675,\n0.018208758905529976,\n0.052702222019433975,\n-0.020327096804976463,\n-0.01995668187737465,\n0.027658754959702492,\n0.05226461961865425,\n-0.09045842289924622,\n-0.05595369264483452,\n-0.015193603932857513,\n0.11809875071048737,\n0.006927188020199537,\n-0.042815886437892914,\n0.02016316168010235,\n-0.007551214657723904,\n0.05370989069342613,\n-0.06269364058971405,\n-0.015371100045740604,\n0.07905995845794678,\n0.01635879836976528,\n0.01324666291475296,\n0.05565342679619789,\n0.016787931323051453,\n0.08823872357606888,\n-0.06329561024904251,\n0.018252374604344368,\n0.016899660229682922,\n-0.0900074765086174,\n-0.013926304876804352,\n-0.05456570163369179,\n0.09763795137405396,\n-0.04544650763273239,\n-0.11169182509183884,\n-0.016722947359085083,\n0.028883112594485283,\n0.02041824720799923,\n-0.07608170062303543,\n-0.0366877056658268,\n-0.03977571055293083,\n0.036188457161188126,\n-0.09180538356304169,\n0.02953210100531578,\n-0.04220666363835335,\n0.130827859044075,\n0.024324607104063034,\n0.025249570608139038,\n-0.01618010364472866,\n0.010552453808486462,\n0.0027521972078830004,\n0.07488350570201874,\n0.010217934846878052,\n-0.005154080223292112,\n0.04516935348510742,\n-0.020390905439853668,\n0.039545439183712006,\n-0.03116907924413681,\n-0.04323665052652359,\n0.020132753998041153,\n0.0670941025018692,\n-0.08838535100221634,\n-0.0057636769488453865,\n0.014565511606633663,\n-0.034343305975198746,\n0.08641396462917328,\n0.03842025622725487,\n-0.06397533416748047,\n-0.004498984199017286,\n-0.038620349019765854,\n0.009389190003275871,\n-0.0615059956908226,\n-0.018634818494319916,\n-0.04963228479027748,\n0.0460701584815979,\n0.07461929321289062,\n0.016484474763274193,\n-0.04153159260749817,\n0.07544155418872833,\n0.009718707762658596,\n-0.02934517152607441,\n0.009860233403742313,\n-0.019787028431892395,\n-0.1266753375530243,\n-0.006543517112731934,\n0.0049575152806937695,\n-0.022630779072642326,\n0.06232202798128128,\n-0.00884722638875246,\n-0.0094221206381917,\n0.07500597089529037,\n-0.011071158573031425,\n-0.011291255243122578,\n-0.0023497689981013536,\n-0.0020577521063387394,\n-0.022909540683031082,\n-0.020390814170241356,\n-0.08629532158374786,\n0.035559121519327164,\n0.004795318003743887,\n-0.025927070528268814,\n-0.0006614814046770334,\n-0.017121002078056335,\n-0.019804026931524277,\n-0.09941168129444122,\n-0.12973710894584656,\n-0.03620882332324982,\n0.010951397940516472,\n-0.10579998791217804,\n0.018861234188079834,\n-0.06653666496276855,\n-0.009016799740493298,\n0.01645198091864586,\n0.05936354771256447,\n0.02491680160164833,\n0.06697887927293777,\n0.062244962900877,\n0.02958441898226738,\n-0.07033420354127884,\n2.6649770180736317e-33,\n0.021844014525413513,\n-0.08870648592710495,\n-0.0011538179824128747,\n0.0232767965644598,\n-0.01894250698387623,\n0.008065932430326939,\n-0.035928282886743546,\n0.08716070652008057,\n0.020712479948997498,\n0.06679967790842056,\n-0.02447659522294998,\n0.03860645368695259,\n-0.0586448572576046,\n0.054171912372112274,\n0.04741951450705528,\n0.03192995861172676,\n-0.07583040744066238,\n-0.01683441549539566,\n0.0055133323185145855,\n0.034086331725120544,\n0.09274634718894958,\n0.03650207072496414,\n-0.009820892475545406,\n0.036785200238227844,\n0.047446656972169876,\n0.031396280974149704,\n-0.02660900540649891,\n-0.05472869798541069,\n-0.0004101111553609371,\n0.01243777945637703,\n-0.05776720494031906,\n-0.12133051455020905,\n0.004859668668359518,\n-0.005881412420421839,\n0.03496639057993889,\n0.0011130021885037422,\n-0.03295896574854851,\n-0.019126981496810913,\n-0.09516119956970215,\n0.011669756844639778,\n0.026976292952895164,\n0.04149681329727173,\n-0.03890489786863327,\n-0.07173115760087967,\n-0.039984408766031265,\n0.03461568057537079,\n0.056760385632514954,\n0.03854312747716904,\n-0.005076217465102673,\n-0.048972200602293015,\n-0.03264437988400459,\n0.047348879277706146,\n-0.028061090037226677,\n-0.015485992655158043,\n0.04073994606733322,\n-0.010933739133179188,\n0.07432981580495834,\n0.04521976783871651,\n0.06155385449528694,\n-0.04286882281303406,\n-0.04373219609260559,\n-0.03089478425681591,\n0.037015557289123535,\n-0.012399279512465,\n-0.04028019309043884,\n0.018744099885225296,\n0.04238991439342499,\n0.002801078837364912,\n0.11493764072656631,\n-0.01020615454763174,\n-0.05960826203227043,\n0.10087732970714569,\n-0.00055444345343858,\n0.003897454123944044,\n-0.017415115609765053,\n0.02193945087492466,\n-0.02333473414182663,\n-0.1286035031080246,\n-0.0594884529709816,\n0.01876922883093357,\n-0.0107755521312356,\n-0.0059989625588059425,\n-0.017639396712183952,\n0.02809220924973488,\n-0.05434252694249153,\n0.01365494355559349,\n-0.0075187087059021,\n-0.10503418743610382,\n-0.00582492258399725,\n-0.10465067625045776,\n0.053811490535736084,\n0.012696387246251106,\n-0.03567224740982056,\n-0.12682373821735382,\n-0.04431792348623276,\n-5.649626418775523e-33,\n-0.010820521041750908,\n-0.008025307208299637,\n-0.05365429446101189,\n0.03958004713058472,\n-0.02104412391781807,\n0.0061301738023757935,\n0.044681861996650696,\n0.050363361835479736,\n-0.01814057119190693,\n-0.0430050753057003,\n0.012102004140615463,\n-0.005774796940386295,\n0.033855050802230835,\n-0.06575366854667664,\n-0.00653000408783555,\n0.016766533255577087,\n-0.12117733061313629,\n-0.09218578785657883,\n0.007316680159419775,\n-0.01942664571106434,\n-0.05662669613957405,\n0.08246578276157379,\n0.02901674434542656,\n0.04751332476735115,\n0.05799226835370064,\n-0.00899638794362545,\n-0.04977171868085861,\n0.033190544694662094,\n0.11511028558015823,\n0.02250894159078598,\n0.021201487630605698,\n-0.0499325729906559,\n-0.0415009967982769,\n-0.009317407384514809,\n-0.09659233689308167,\n-0.05510890111327171,\n0.06295064091682434,\n0.024173470214009285,\n-0.04577154666185379,\n0.024133525788784027,\n0.045593682676553726,\n0.02101696841418743,\n-0.049103744328022,\n0.024935608729720116,\n-0.053046178072690964,\n-0.014961596578359604,\n-0.09521038830280304,\n0.029579076915979385,\n0.02518356405198574,\n-0.08900485187768936,\n0.07622209191322327,\n-0.03638580068945885,\n-0.05705391988158226,\n-0.03871438279747963,\n0.011190400458872318,\n-0.04650144279003143,\n-0.025219738483428955,\n0.00011186233314219862,\n-0.04297143965959549,\n0.06217937543988228,\n0.040211718529462814,\n-0.07403940707445145,\n-0.0007105701370164752,\n0.0006416687392629683,\n-0.07840534299612045,\n-0.026061605662107468,\n-0.02154943160712719,\n-0.06263765692710876,\n-0.11086387932300568,\n-0.05587908253073692,\n0.07480042427778244,\n-0.07763926684856415,\n0.049927398562431335,\n0.06204086169600487,\n-0.001318484079092741,\n-0.004204366356134415,\n-0.05604930222034454,\n-0.0030061937868595123,\n0.02281801961362362,\n0.06189575046300888,\n-0.046122193336486816,\n0.0020551353227347136,\n0.05012568086385727,\n0.08694884926080704,\n0.06670202314853668,\n0.018796497955918312,\n-0.01055945549160242,\n0.06277844309806824,\n-0.04749682545661926,\n-0.0014071010518819094,\n-0.08777494728565216,\n0.09142817556858063,\n-0.09544060379266739,\n0.09548324346542358,\n-0.010171260684728622,\n-5.976371397764524e-08,\n-0.07207749783992767,\n-0.0186929851770401,\n0.02441776543855667,\n0.047647684812545776,\n0.007122725248336792,\n-0.05590169504284859,\n-0.022228669375181198,\n0.080266073346138,\n0.056049395352602005,\n-0.03505353629589081,\n0.06595905870199203,\n-0.02741449698805809,\n-0.1040404662489891,\n-0.013773255050182343,\n0.11995211988687515,\n0.0002778216148726642,\n0.07589299976825714,\n-0.009353214874863625,\n-0.013621056452393532,\n-0.03814827278256416,\n-0.0320858396589756,\n-0.04983909800648689,\n-0.06720622628927231,\n-0.08362554013729095,\n0.008179157972335815,\n0.01104153972119093,\n0.013109265826642513,\n0.13754235208034515,\n0.0069571868516504765,\n-0.02941022627055645,\n0.011861592531204224,\n0.01604282297194004,\n0.10429032146930695,\n-0.003293645801022649,\n0.021545739844441414,\n0.06281221657991409,\n0.03468310087919235,\n0.05810248851776123,\n-0.031500861048698425,\n0.014499560929834843,\n0.05990522727370262,\n-0.01979857124388218,\n-0.09960301965475082,\n0.0047220224514603615,\n0.07983223348855972,\n0.009491737931966782,\n0.06561332941055298,\n-0.007396463770419359,\n0.062069281935691833,\n0.050873052328825,\n-0.0004922244697809219,\n-0.05793503299355507,\n0.034569934010505676,\n0.08377060294151306,\n0.037084512412548065,\n0.03597693890333176,\n-0.0167862419039011,\n-0.018676359206438065,\n0.06553705036640167,\n0.022750040516257286,\n0.015125693753361702,\n0.032285649329423904,\n0.03319932520389557,\n0.016521470621228218]}}"]})})]}),"\n",(0,t.jsxs)(n.p,{children:['To "use" the ',(0,t.jsx)(n.code,{children:"VectorIndex"})," we can execute a vector-search query:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"query = db['documents'].like({'txt': 'Tell me about vector-search'}, vector_index=vector_index.identifier, n=3).find()\ncursor = query.execute()\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"2024-May-23 22:33:16.62| INFO     | Duncans-MBP.fritz.box| superduperdb.base.datalayer:1095 | {}"})}),(0,t.jsx)("pre",{children:(0,t.jsx)(n.p,{children:"Batches:   0%|          | 0/1 [00:00<?, ?it/s]"})})]}),"\n",(0,t.jsxs)(n.p,{children:["This query will return a cursor of ",(0,t.jsx)(n.a,{href:"../fundamentals/document",children:(0,t.jsx)(n.code,{children:"Document"})})," instances.\nTo obtain the raw dictionaries, call the ",(0,t.jsx)(n.code,{children:".unpack()"})," command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"for r in cursor:\n    print('=' * 100)\n    print(r.unpack()['txt'])\n    print('=' * 100)\n"})}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Outputs"}),(0,t.jsxs)("pre",{children:[(0,t.jsx)(n.h2,{id:"",children:"===================================================================================================="}),(0,t.jsx)(n.h2,{id:"sidebar_position-7",children:"sidebar_position: 7"}),(0,t.jsx)(n.h1,{id:"vector-search-1",children:"Vector-search"}),(0,t.jsxs)(n.p,{children:["SuperDuperDB allows users to implement vector-search in their database by either\nusing in-database functionality, or via a sidecar implementation with ",(0,t.jsx)(n.code,{children:"lance"})," and ",(0,t.jsx)(n.code,{children:"FastAPI"}),"."]}),(0,t.jsx)(n.h2,{id:"philosophy",children:"Philosophy"}),(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"superduperdb"}),", from a user point-of-view vector-search isn't a completely different beast than other ways of\nusing the system:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The vector-preparation is exactly the same as preparing outputs with any model,\nwith the special difference that the outputs are vectors, arrays or tensors."}),"\n",(0,t.jsx)(n.li,{children:"Vector-searches are just another type of database query which happen to use\nthe stored vectors."}),"\n"]}),(0,t.jsx)(n.h2,{id:"algorithm",children:"Algorithm"}),(0,t.jsx)(n.p,{children:"Here is a schematic of how vector-search works:"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(2293).A+"",width:"5120",height:"2925"})}),(0,t.jsx)(n.h2,{id:"explanation",children:"Explanation"}),(0,t.jsx)(n.p,{children:"A vector-search query has the schematic form:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"table_or_collection\n    .like(Document(\\<dict-to-search-with\\>))      # the operand is vectorized using registered models\n    .filter_results(*args, **kwargs)            # the results of vector-search are filtered\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"table_or_collection\n    .filter_results(*args, **kwargs)            # the results of vector-search are filtered\n    .like(Document(\\<dict-to-search-with\\>))      # the operand is vectorized using registered models\n"})}),(0,t.jsx)(n.p,{children:"...or"}),(0,t.jsxs)(n.p,{children:["The type of such a query is a ",(0,t.jsx)(n.code,{children:"CompoundSelect"}),". It's 2 parts are the vector-search part (",(0,t.jsx)(n.code,{children:"like"}),") and the\nfiltering part (",(0,t.jsx)(n.code,{children:"select"}),")."]}),(0,t.jsxs)(n.p,{children:["In the first case, the operand of ",(0,t.jsx)(n.code,{children:"like"})," is dispatched to a ",(0,t.jsx)(n.strong,{children:"model"}),", which converts this into a ",(0,t.jsx)(n.strong,{children:"vector"}),".\nThe ",(0,t.jsx)(n.strong,{children:"vector"})," is compared to previously saved outputs of the same or a paired ",(0,t.jsx)(n.strong,{children:"model"})," (multi-modal).\nThe most similar ",(0,t.jsx)(n.code,{children:"ids"})," are retrieved. The ",(0,t.jsx)(n.code,{children:"select"})," part of the query is then transformed to\na similar query which searches within the retrieved ",(0,t.jsx)(n.code,{children:"ids"}),". The full set of results are returned\nto the client."]}),(0,t.jsxs)(n.p,{children:["Read ",(0,t.jsx)(n.a,{href:"../walkthrough/vector_search.md",children:"here"})," about setting up and detailed usage of vector-search."]}),(0,t.jsx)(n.h1,{id:"-1",children:"===================================================================================================="}),(0,t.jsx)(n.h1,{id:"vector-search-queries",children:"Vector search queries"}),(0,t.jsxs)(n.p,{children:["Vector search queries are built with the ",(0,t.jsx)(n.code,{children:".like"})," operator.\nThis allows developers to combine standard database with vector-search queries.\nThe philosophy is that developers do not need to convert their inputs\ninto vector's themselves. Rather, this is taken care by the specified\n",(0,t.jsxs)(n.a,{href:"../apply_api/vector_index",children:[(0,t.jsx)(n.code,{children:"VectorIndex"})," component"]}),"."]}),(0,t.jsx)(n.p,{children:"The basic schematic for vector-search queries is:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"table_or_collection\n    .like(Document(\\<dict-to-search-with\\>), vector_index='\\<my-vector-index\\>')      # the operand is vectorized using registered models\n    .filter_results(*args, **kwargs)            # the results of vector-search are filtered\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"or..."})})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"table_or_collection\n    .filter_results(*args, **kwargs)            # the results of vector-search are filtered\n    .like(Document(\\<dict-to-search-with\\>),\n          vector_index='\\<my-vector-index\\>')      # the operand is vectorized using registered models\n"})}),(0,t.jsx)(n.h2,{id:"mongodb",children:"MongoDB"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from superduperdb.ext.pillow import pil_image\nfrom superduperdb import Document\n\nmy_image = PIL.Image.open('test/material/data/test_image.png')\n\nq = my_collection.find(\\{'brand': 'Nike'\\}).like(Document(\\{'img': pil_image(my_image)\\}), \n                                               vector_index='\\<my-vector-index\\>')\n\nresults = db.execute(q)\n"})}),(0,t.jsx)(n.h2,{id:"sql",children:"SQL"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"t = db.load('table', 'my-table')\nt.filter(t.brand == 'Nike').like(Document(\\{'img': pil_image(my_image)\\}))\n\nresults = db.execute(q)\n"})}),(0,t.jsx)(n.h1,{id:"-2",children:"===================================================================================================="}),(0,t.jsx)(n.h1,{id:"sidecar-vector-comparison-integration",children:"Sidecar vector-comparison integration"}),(0,t.jsxs)(n.p,{children:["For databases which don't have their own vector-search implementation, ",(0,t.jsx)(n.code,{children:"superduperdb"})," offers\n2 integrations:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"In memory vector-search"}),"\n",(0,t.jsx)(n.li,{children:"Lance vector-search"}),"\n"]}),(0,t.jsx)(n.p,{children:"To configure these, add one of the following options to your configuration:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"cluster:\n  vector_search:\n    type: in_memory|lance\n"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"or"})})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export SUPERDUPER_CLUSTER_VECTOR_SEARCH_TYPE='in_memory|lance'\n"})}),(0,t.jsxs)(n.h1,{id:"in-this-case-whenever-a-developer-executes-a-vector-search-query-including-likeexecution-of-the-similarity-and-sorting-computations-of-vectors-is-outsourced-toa-sidecar-implementation-which-is-managed-by-superduperdb",children:["In this case, whenever a developer executes a vector-search query including ",(0,t.jsx)(n.code,{children:".like"}),",\nexecution of the similarity and sorting computations of vectors is outsourced to\na sidecar implementation which is managed by ",(0,t.jsx)(n.code,{children:"superduperdb"}),"."]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["You should see that the documents returned are relevant to the ",(0,t.jsx)(n.code,{children:"like"})," part of the\nquery."]}),"\n",(0,t.jsxs)(n.p,{children:["Learn more about building queries with ",(0,t.jsx)(n.code,{children:"superduperdb"})," ",(0,t.jsx)(n.a,{href:"/docs/execute_api/overview",children:"here"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},2293:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/vector-search-a463432ac5cf55fd4d696a794473e3c2.png"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);