"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[93],{8263:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>i});var s=r(4848),o=r(8453);const t={},d="Bring your own models",a={id:"models/bring_your_own_models",title:"Bring your own models",description:"There are two ways to bring your own computations",source:"@site/content/models/bring_your_own_models.md",sourceDirName:"models",slug:"/models/bring_your_own_models",permalink:"/docs/models/bring_your_own_models",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/models/bring_your_own_models.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Creating embeddings",permalink:"/docs/models/embeddings"},next:{title:"Reusable snippets",permalink:"/docs/category/reusable-snippets"}},l={},i=[{value:"Wrap your own Python functions",id:"wrap-your-own-python-functions",level:2},{value:"Import classes and functions directly",id:"import-classes-and-functions-directly",level:2},{value:"Create your own <code>Model</code> subclasses",id:"create-your-own-model-subclasses",level:2},{value:"Minimal example with <code>prediction</code>",id:"minimal-example-with-prediction",level:3},{value:"Including datablobs which can&#39;t be converted to JSON",id:"including-datablobs-which-cant-be-converted-to-json",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"bring-your-own-models",children:"Bring your own models"}),"\n",(0,s.jsx)(n.p,{children:"There are two ways to bring your own computations\nand models to SuperDuperDB."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Wrap your own Python functions"}),"\n",(0,s.jsxs)(n.li,{children:["Write your own ",(0,s.jsx)(n.code,{children:"Model"})," sub-classes"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"wrap-your-own-python-functions",children:"Wrap your own Python functions"}),"\n",(0,s.jsx)(n.p,{children:"This serializes a Python object or class:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduperdb import model\n\n@model\ndef my_model(x, y):\n    return x + y\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Additional arguments may be provided to the decorator from ",(0,s.jsx)(n.code,{children:"superduperdb.components.model.ObjectModel"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"@model(num_workers=4)\ndef my_model(x, y):\n    return x + y\n"})}),"\n",(0,s.jsx)(n.p,{children:"Similarly the following snippet saves the source code of a python object instead of serializing the object:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduperdb import code\n\n@code\ndef my_other_model(x, y):\n    return x * y\n"})}),"\n",(0,s.jsxs)(n.p,{children:["These decorators may also be applied to ",(0,s.jsx)(n.code,{children:"callable"})," classes.\nIf your class has important state which should be serialized with the class,\nthen use ",(0,s.jsx)(n.code,{children:"model"})," otherwise you can use ",(0,s.jsx)(n.code,{children:"codemodel"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduperdb import ObjectModel, model\n\n@model\nclass MyClass:\n    def __call__(self, x):\n        return x + 2\n\nm = MyClass()\n\nassert isinstance(m, ObjectModel)\nassert m.predict(2) == 4\n"})}),"\n",(0,s.jsx)(n.p,{children:"As before, additional arguments can be supplied to the decorator:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduperdb import vector, DataType, model\n\n@model(datatype=vector(shape=(32, )))\nclass MyClass:\n    def __call__(self, x):\n        return [x + 2] * 32\n\nm = MyClass()\n\nassert isinstance(m.datatype, DataType)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"import-classes-and-functions-directly",children:"Import classes and functions directly"}),"\n",(0,s.jsx)(n.p,{children:'This may be more intuitive to some developers,\nand allows functionality to be invoked "directly"\nfrom third-party packages:'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduperdb.ext.auto.sklearn.svm import SVC\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"create-your-own-model-subclasses",children:["Create your own ",(0,s.jsx)(n.code,{children:"Model"})," subclasses"]}),"\n",(0,s.jsxs)(n.p,{children:["Developers may create their own ",(0,s.jsx)(n.code,{children:"Model"})," sub-classes, and deploy these directly to ",(0,s.jsx)(n.code,{children:"superduperdb"}),".\nThe key methods the developers need to create are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"predict"})}),"\n",(0,s.jsxs)(n.li,{children:["Optionally ",(0,s.jsx)(n.code,{children:"predict_batches"}),", to speed up batching"]}),"\n",(0,s.jsxs)(n.li,{children:["Optionally ",(0,s.jsx)(n.code,{children:"fit"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"minimal-example-with-prediction",children:["Minimal example with ",(0,s.jsx)(n.code,{children:"prediction"})]}),"\n",(0,s.jsxs)(n.p,{children:["Here is a simple sub-class of ",(0,s.jsx)(n.code,{children:"Model"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduperdb.components.model import Model\nimport typing as t\n\nclass CustomModel(Model):\n    signature: t.ClassVar[str] = '**kwargs'\n    my_argument: int = 1\n\n    def predict(self, x, y):\n        return x + y + self.my_argument\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The addition of ",(0,s.jsx)(n.code,{children:"signature = **kwargs"})," controls how the individual datapoints in the dataset\nare emitted, for consumption by the internal workings of the model"]}),"\n",(0,s.jsx)(n.h3,{id:"including-datablobs-which-cant-be-converted-to-json",children:"Including datablobs which can't be converted to JSON"}),"\n",(0,s.jsxs)(n.p,{children:["If your model contains large data-artifacts or non-JSON-able content, then\nthese items should be labelled with ",(0,s.jsxs)(n.a,{href:"../apply_api/datatype",children:["a ",(0,s.jsx)(n.code,{children:"DataType"})]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["On saving, this will allow ",(0,s.jsx)(n.code,{children:"superduperdb"})," to encode their values and save the result\nin ",(0,s.jsx)(n.code,{children:"db.artifact_store"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Here is an example which includes a ",(0,s.jsx)(n.code,{children:"numpy.array"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import numpy as np\nfrom superduperdb.ext.numpy import array\n\n\nclass AnotherModel(Model):\n    _artifacts: t.ClassVar[t.Any] = [\n        ('my_array', array)\n    ]\n    signature: t.ClassVar[str] = '**kwargs'\n    my_argument: int = 1\n    my_array: np.ndarray\n\n    def predict(self, x, y):\n        return x + y + self.my_argument + self.my_array\n\nmy_array = numpy.random.randn(100000, 20)\nmy_array_type = array('my_array', shape=my_array.shape, encodable='lazy_artifact')\ndb.apply(my_array_type)\n\nm = AnotherModel(\n    my_argument=2,\n    my_array=my_array,\n    artifacts={'my_array': my_array_type},\n)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.code,{children:"db.apply"})," is called, ",(0,s.jsx)(n.code,{children:"m.my_array"})," will be converted to ",(0,s.jsx)(n.code,{children:"bytes"})," with ",(0,s.jsx)(n.code,{children:"numpy"})," functionality\nand a reference to these ",(0,s.jsx)(n.code,{children:"bytes"})," will be saved in the ",(0,s.jsx)(n.code,{children:"db.metadata"}),".\nIn principle any ",(0,s.jsx)(n.code,{children:"DataType"})," can be used to encode such an object."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var s=r(6540);const o={},t=s.createContext(o);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);