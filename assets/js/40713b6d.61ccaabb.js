"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[890],{8403:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var s=a(4848),t=a(8453);const d={sidebar_position:5},i="Encoding data",c={id:"fundamentals/data_transmision",title:"Encoding data",description:"In AI, typical types of data are:",source:"@site/content/fundamentals/data_transmision.md",sourceDirName:"fundamentals",slug:"/fundamentals/data_transmision",permalink:"/docs/fundamentals/data_transmision",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/fundamentals/data_transmision.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Datalayer",permalink:"/docs/fundamentals/datalayer_overview"},next:{title:"Vector-search",permalink:"/docs/fundamentals/vector_search_algorithm"}},r={},o=[{value:"<code>Document</code>",id:"document",level:3},{value:"<code>DataType</code>",id:"datatype",level:3},{value:"<code>Schema</code>",id:"schema",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"encoding-data",children:"Encoding data"}),"\n",(0,s.jsx)(n.p,{children:"In AI, typical types of data are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Numbers"})," (integers, floats, etc.)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Text"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Images"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Audio"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Videos"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"...bespoke in house data"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Most databases don't support any data other than numbers and text.\nSuperDuperDB enables the use of these more interesting data-types using the ",(0,s.jsx)(n.code,{children:"Document"})," wrapper."]}),"\n",(0,s.jsx)(n.h3,{id:"document",children:(0,s.jsx)(n.code,{children:"Document"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Document"})," wrapper, wraps dictionaries, and is the container which is used whenever\ndata is exchanged with your database. That means inputs, and queries, wrap dictionaries\nused with ",(0,s.jsx)(n.code,{children:"Document"})," and also results are returned wrapped with ",(0,s.jsx)(n.code,{children:"Document"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Whenever the ",(0,s.jsx)(n.code,{children:"Document"})," contains data which is in need of specialized serialization,\nthen the ",(0,s.jsx)(n.code,{children:"Document"})," instance contains calls to ",(0,s.jsx)(n.code,{children:"DataType"})," instances."]}),"\n",(0,s.jsx)(n.h3,{id:"datatype",children:(0,s.jsx)(n.code,{children:"DataType"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsxs)(n.a,{href:"../apply_api/datatype",children:[(0,s.jsx)(n.code,{children:"DataType"})," class"]}),", allows users to create and encoder custom datatypes, by providing\ntheir own encoder/decoder pairs."]}),"\n",(0,s.jsxs)(n.p,{children:["Here is an example of applying an ",(0,s.jsx)(n.code,{children:"DataType"})," to add an image to a ",(0,s.jsx)(n.code,{children:"Document"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import pickle\nimport PIL.Image\nfrom superduperdb import DataType, Document\n\nimage = PIL.Image.open('my_image.jpg')\n\nmy_image_encoder = DataType(\n    identifier='my-pil',\n    encoder=lambda x: pickle.dumps(x),\n    decoder=lambda x: pickle.loads(x),\n)\n\ndocument = Document({'img': my_image_encoder(image)})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The bare-bones dictionary may be exposed with ",(0,s.jsx)(n.code,{children:".unpack()"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:">>> document.unpack()\n{'img': <PIL.PngImagePlugin.PngImageFile image mode=P size=400x300>}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["By default, data encoded with ",(0,s.jsx)(n.code,{children:"DataType"})," is saved in the database, but developers\nmay alternatively save data in the ",(0,s.jsx)(n.code,{children:"db.artifact_store"})," instead."]}),"\n",(0,s.jsxs)(n.p,{children:["This may be achiever by specifying the ",(0,s.jsx)(n.code,{children:"encodable=..."})," parameter:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"my_image_encoder = DataType(\n    identifier='my-pil',\n    encoder=lambda x: pickle.dumps(x),\n    decoder=lambda x: pickle.loads(x),\n    encodable='artifact',    # saves to disk/ db.artifact_store\n    # encodable='lazy_artifact', # Just in time loading\n)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"encodable"})," specifies the type of the output of the ",(0,s.jsx)(n.code,{children:"__call__"})," method,\nwhich will be a subclass of ",(0,s.jsx)(n.code,{children:"superduperdb.components.datatype._BaseEncodable"}),".\nThese encodables become leaves in the tree defines by a ",(0,s.jsx)(n.code,{children:"Document"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"schema",children:(0,s.jsx)(n.code,{children:"Schema"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"Schema"})," allows developers to connect named fields of dictionaries\nor columns of ",(0,s.jsx)(n.code,{children:"pandas.DataFrame"})," objects with ",(0,s.jsx)(n.code,{children:"DataType"})," instances."]}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"Schema"})," is used, in particular, for SQL databases/ tables, and for\nmodels that return multiple outputs."]}),"\n",(0,s.jsxs)(n.p,{children:["Here is an example ",(0,s.jsx)(n.code,{children:"Schema"}),", which is used together with text and image\nfields:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"s = Schema('my-schema', fields={'my-text': 'str', 'my-image': my_image_encoder})\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var s=a(6540);const t={},d=s.createContext(t);function i(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);